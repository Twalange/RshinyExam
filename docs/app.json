[{"name":"app.R","content":"library(shiny)\r\nlibrary(tidyverse)\r\nlibrary(DT)\r\nlibrary(bslib)\r\nlibrary(thematic)\r\nlibrary(curl)\r\n\r\nthematic::thematic_shiny(font = \"Noto Sans Mono\")\r\n\r\nui <- fluidPage(\r\n  theme = bs_theme(\r\n    version = 5,\r\n    bootswatch = \"minty\",\r\n  ),\r\n  h2(\"Exploration des Diamants\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      radioButtons(\r\n        inputId = \"shouldScatterPlotBePink\",\r\n        label = \"Colorier les points en rose ?\",\r\n        choices = c(\"Oui\", \"Non\")\r\n      ),\r\n      selectInput(\r\n        inputId = \"colorFilter\",\r\n        label = \"Choisir une couleur à filtrer :\",\r\n        choices = levels(diamonds$color)\r\n      ),\r\n      sliderInput(\r\n        inputId = \"priceFilter\",\r\n        label = \"Prix maximum :\",\r\n        min = 300,\r\n        max = 20000,\r\n        value = 5000\r\n      ),\r\n      actionButton(\r\n        inputId = \"showNotification\",\r\n        label = \"Afficher une notification\",\r\n      )\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"diamondPlot\"),\r\n      DT::DTOutput(\"DTOutput\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  rvDiamonds <- reactiveValues(df = NULL, dotcolor = \"#AA0000\", textFilters = \"Lorem ipsum\")\r\n  listenPriceAndColor <- reactive({\r\n    list(input$priceFilter, input$colorFilter)\r\n  })\r\n\r\n  observeEvent(listenPriceAndColor(), {\r\n    rvDiamonds$df <- diamonds %>%\r\n      select(!c(x, y, z)) %>%\r\n      filter(price < input$priceFilter & color == input$colorFilter)\r\n    rvDiamonds$textFilters <- paste0(\"prix: \", input$priceFilter, \" & color: \", input$colorFilter)\r\n  })\r\n\r\n  observeEvent(input$shouldScatterPlotBePink, {\r\n    rvDiamonds$dotcolor <- if_else(input$shouldScatterPlotBePink == \"Oui\", \"#ffC0cb\", \"#5a5a5a\")\r\n  })\r\n\r\n  observeEvent(input$showNotification, {\r\n    showNotification(\r\n      rvDiamonds$textFilters\r\n    )\r\n  })\r\n\r\n  output$diamondPlot <- renderPlot({\r\n    req(rvDiamonds$df, rvDiamonds$dotcolor)\r\n    rvDiamonds$df %>%\r\n      ggplot(aes(x = carat, y = price)) +\r\n      geom_point(colour = rvDiamonds$dotcolor) +\r\n      ggtitle(rvDiamonds$textFilters)\r\n  })\r\n\r\n  output$DTOutput <- renderDT({\r\n    req(rvDiamonds$df)\r\n    rvDiamonds$df\r\n  })\r\n}\r\n\r\nshinyApp(ui = ui, server = server)","type":"text"},{"name":"README.md","content":"## R shiny Exam\r\n\r\n# Reproduction et déploiement d'une application Rshiny","type":"text"},{"name":"RshinyExam.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
